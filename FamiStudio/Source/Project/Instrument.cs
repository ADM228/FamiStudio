using System;
using System.Linq;
using System.Drawing;
using System.Diagnostics;
using System.Collections.Generic;

namespace FamiStudio
{
    public class Instrument
    {
        private int id;
        private string name;
        private int expansion = global::FamiStudio.ExpansionType.None;
        private Envelope[] envelopes = new Envelope[EnvelopeType.Count];
        private Color color;

        // FDS
        private byte fdsMasterVolume = FdsMasterVolumeType.Volume100;
        private byte fdsWavPreset = WavePresetType.Sine;
        private byte fdsModPreset = WavePresetType.Flat;
        private ushort fdsModSpeed;
        private byte fdsModDepth;
        private byte fdsModDelay;

        // N163
        private byte n163WavePreset = WavePresetType.Sine;
        private byte n163WaveSize = 16;
        private byte n163WavePos = 0;

        // VRC6
        private byte vrc6SawMasterVolume = Vrc6SawMasterVolumeType.Half; 

        // VRC7
        private byte vrc7Patch = Vrc7InstrumentPatch.Bell;
        private byte[] vrc7PatchRegs = new byte[8];

        // EPSM
        private byte epsmPatch = EPSMInstrumentPatch.Default;
        private byte[] epsmPatchRegs = new byte[31];

        public int Id => id;
        public string Name { get => name; set => name = value; }
        public Color Color { get => color; set => color = value; }
        public int ExpansionType { get => expansion; set => expansion = value; }
        public bool IsExpansionInstrument => expansion != global::FamiStudio.ExpansionType.None;
        public Envelope[] Envelopes => envelopes;
        public int NumActiveEnvelopes => envelopes.Count(e => e != null);
        public bool HasReleaseEnvelope => envelopes[EnvelopeType.Volume] != null && envelopes[EnvelopeType.Volume].Release >= 0;
        public byte[] Vrc7PatchRegs => vrc7PatchRegs;
        public byte[] EpsmPatchRegs => epsmPatchRegs;

        public Instrument()
        {
        }

        public Instrument(int id, int expansion, string name)
        {
            this.id = id;
            this.expansion = expansion;
            this.name = name;
            this.color = ThemeBase.RandomCustomColor();
            for (int i = 0; i < EnvelopeType.Count; i++)
            {
                if (IsEnvelopeActive(i))
                    envelopes[i] = new Envelope(i);
            }

            if (expansion == global::FamiStudio.ExpansionType.Fds)
            {
                UpdateFdsWaveEnvelope();
                UpdateFdsModulationEnvelope();
            }
            else if (expansion == global::FamiStudio.ExpansionType.N163)
            {
                UpdateN163WaveEnvelope();
            }
            else if (expansion == global::FamiStudio.ExpansionType.Vrc7)
            {
                vrc7Patch = Vrc7InstrumentPatch.Bell;
                Array.Copy(Vrc7InstrumentPatch.Infos[Vrc7InstrumentPatch.Bell].data, vrc7PatchRegs, 8);
            }
            else if (expansion == global::FamiStudio.ExpansionType.EPSM)
            {
                epsmPatch = EPSMInstrumentPatch.Default;
                Array.Copy(EPSMInstrumentPatch.Infos[EPSMInstrumentPatch.Default].data, epsmPatchRegs, 31);
            }
        }

        public bool IsEnvelopeActive(int envelopeType)
        {
            if (envelopeType == EnvelopeType.Volume ||
                envelopeType == EnvelopeType.Pitch  ||
                envelopeType == EnvelopeType.Arpeggio)
            {
                return true;
            }
            else if (envelopeType == EnvelopeType.DutyCycle)
            {
                return expansion == global::FamiStudio.ExpansionType.None ||
                       expansion == global::FamiStudio.ExpansionType.Vrc6 ||
                       expansion == global::FamiStudio.ExpansionType.Mmc5;
            }
            else if (envelopeType == EnvelopeType.FdsWaveform ||
                     envelopeType == EnvelopeType.FdsModulation)
            {
                return expansion == global::FamiStudio.ExpansionType.Fds;
            }
            else if (envelopeType == EnvelopeType.N163Waveform)
            {
                return expansion == global::FamiStudio.ExpansionType.N163;
            }

            return false;
        }

        public byte FdsWavePreset
        {
            get { return fdsWavPreset; }
            set
            {
                fdsWavPreset = value;
                UpdateFdsWaveEnvelope();
            }
        }

        public byte FdsModPreset
        {
            get { return fdsModPreset; }
            set
            {
                fdsModPreset = value;
                UpdateFdsModulationEnvelope();
            }
        }

        public byte N163WavePreset
        {
            get { return n163WavePreset; }
            set
            {
                n163WavePreset = value;
                UpdateN163WaveEnvelope();
            }
        }

        public byte N163WaveSize
        {
            get { return n163WaveSize; }
            set
            {
                Debug.Assert((value & 0x03) == 0);
                n163WaveSize = (byte)Utils.Clamp(value       & 0xfc, 4, 248);
                n163WavePos  = (byte)Utils.Clamp(n163WavePos & 0xfc, 0, 248 - n163WaveSize);
                UpdateN163WaveEnvelope();
            }
        }

        public byte N163WavePos
        {
            get { return n163WavePos; }
            set
            {
                Debug.Assert((value & 0x03) == 0);
                n163WavePos  = (byte)Utils.Clamp(value        & 0xfc, 0, 248);
                n163WaveSize = (byte)Utils.Clamp(n163WaveSize & 0xfc, 4, 248 - n163WavePos);
            }
        }
        
        public byte Vrc6SawMasterVolume
        {
            get { return vrc6SawMasterVolume; }
            set { vrc6SawMasterVolume = (byte)Utils.Clamp(value, 0, 2); }
        }

        public byte Vrc7Patch
        {
            get { return vrc7Patch; }
            set
            {
                vrc7Patch = value;
                if (vrc7Patch != 0)
                    Array.Copy(Vrc7InstrumentPatch.Infos[vrc7Patch].data, vrc7PatchRegs, 8);
            }
        }

        public byte EpsmPatch
        {
            get { return epsmPatch; }
            set
            {
                epsmPatch = value;
                if (epsmPatch != 0)
                    Array.Copy(EPSMInstrumentPatch.Infos[epsmPatch].data, epsmPatchRegs, 31);
            }
        }

        public ushort FdsModSpeed     { get => fdsModSpeed;     set => fdsModSpeed = value; }
        public byte   FdsModDepth     { get => fdsModDepth;     set => fdsModDepth = value; }
        public byte   FdsModDelay     { get => fdsModDelay;     set => fdsModDelay = value; } 
        public byte   FdsMasterVolume { get => fdsMasterVolume; set => fdsMasterVolume = value; }

        public void UpdateFdsWaveEnvelope()
        {
            envelopes[EnvelopeType.FdsWaveform].SetFromPreset(EnvelopeType.FdsWaveform, fdsWavPreset);
        }

        public void UpdateFdsModulationEnvelope()
        {
            envelopes[EnvelopeType.FdsModulation].SetFromPreset(EnvelopeType.FdsModulation, fdsModPreset);
        }

        public void UpdateN163WaveEnvelope()
        {
            envelopes[EnvelopeType.N163Waveform].MaxLength = n163WaveSize;
            envelopes[EnvelopeType.N163Waveform].SetFromPreset(EnvelopeType.N163Waveform, n163WavePreset);
        }

        public static string GetVrc7PatchName(int preset)
        {
            return Vrc7InstrumentPatch.Infos[preset].name;
        }

        public static string GetEpsmPatchName(int preset)
        {
            return EPSMInstrumentPatch.Infos[preset].name;
        }

        public uint ComputeCRC(uint crc = 0)
        {
            var serializer = new ProjectCrcBuffer(crc);
            SerializeState(serializer);
            return serializer.CRC;
        }

        public void ValidateIntegrity(Project project, Dictionary<int, object> idMap)
        {
#if DEBUG
            project.ValidateId(id);

            if (idMap.TryGetValue(id, out var foundObj))
                Debug.Assert(foundObj == this);
            else
                idMap.Add(id, this);

            Debug.Assert(project.GetInstrument(id) == this);

            for (int i = 0; i < EnvelopeType.Count; i++)
            {
                bool envelopeExists = envelopes[i] != null;
                bool envelopeShouldExists = IsEnvelopeActive(i);
                Debug.Assert(envelopeExists == envelopeShouldExists);
            }
#endif
        }

        public void ChangeId(int newId)
        {
            id = newId;
        }

        public void SerializeState(ProjectBuffer buffer)
        {
            buffer.Serialize(ref id, true);
            buffer.Serialize(ref name);
            buffer.Serialize(ref color);

            // At version 5 (FamiStudio 2.0.0) we added duty cycle envelopes.
            var dutyCycle = 0;
            if (buffer.Version < 5)
                buffer.Serialize(ref dutyCycle);

            // At version 4 (FamiStudio 1.4.0) we added basic expansion audio (VRC6).
            if (buffer.Version >= 4)
            {
                buffer.Serialize(ref expansion);

                // At version 5 (FamiStudio 2.0.0) we added a ton of expansions.
                if (buffer.Version >= 5)
                {
                    switch (expansion)
                    {
                        case global::FamiStudio.ExpansionType.Fds:
                            buffer.Serialize(ref fdsMasterVolume);
                            buffer.Serialize(ref fdsWavPreset);
                            buffer.Serialize(ref fdsModPreset);
                            buffer.Serialize(ref fdsModSpeed);
                            buffer.Serialize(ref fdsModDepth); 
                            buffer.Serialize(ref fdsModDelay);
                            break;
                        case global::FamiStudio.ExpansionType.N163:
                            buffer.Serialize(ref n163WavePreset);
                            buffer.Serialize(ref n163WaveSize);
                            buffer.Serialize(ref n163WavePos);
                            break;

                        case global::FamiStudio.ExpansionType.Vrc7:
                            buffer.Serialize(ref vrc7Patch);
                            buffer.Serialize(ref vrc7PatchRegs[0]);
                            buffer.Serialize(ref vrc7PatchRegs[1]);
                            buffer.Serialize(ref vrc7PatchRegs[2]);
                            buffer.Serialize(ref vrc7PatchRegs[3]);
                            buffer.Serialize(ref vrc7PatchRegs[4]);
                            buffer.Serialize(ref vrc7PatchRegs[5]);
                            buffer.Serialize(ref vrc7PatchRegs[6]);
                            buffer.Serialize(ref vrc7PatchRegs[7]);
                            break;

                        case global::FamiStudio.ExpansionType.EPSM:
                            buffer.Serialize(ref epsmPatch);
                            buffer.Serialize(ref epsmPatchRegs[0]);
                            buffer.Serialize(ref epsmPatchRegs[1]);
                            buffer.Serialize(ref epsmPatchRegs[2]);
                            buffer.Serialize(ref epsmPatchRegs[3]);
                            buffer.Serialize(ref epsmPatchRegs[4]);
                            buffer.Serialize(ref epsmPatchRegs[5]);
                            buffer.Serialize(ref epsmPatchRegs[6]);
                            buffer.Serialize(ref epsmPatchRegs[7]);
                            buffer.Serialize(ref epsmPatchRegs[8]);
                            buffer.Serialize(ref epsmPatchRegs[9]);
                            buffer.Serialize(ref epsmPatchRegs[10]);
                            buffer.Serialize(ref epsmPatchRegs[11]);
                            buffer.Serialize(ref epsmPatchRegs[12]);
                            buffer.Serialize(ref epsmPatchRegs[13]);
                            buffer.Serialize(ref epsmPatchRegs[14]);
                            buffer.Serialize(ref epsmPatchRegs[15]);
                            buffer.Serialize(ref epsmPatchRegs[16]);
                            buffer.Serialize(ref epsmPatchRegs[17]);
                            buffer.Serialize(ref epsmPatchRegs[18]);
                            buffer.Serialize(ref epsmPatchRegs[19]);
                            buffer.Serialize(ref epsmPatchRegs[20]);
                            buffer.Serialize(ref epsmPatchRegs[21]);
                            buffer.Serialize(ref epsmPatchRegs[22]);
                            buffer.Serialize(ref epsmPatchRegs[23]);
                            buffer.Serialize(ref epsmPatchRegs[24]);
                            buffer.Serialize(ref epsmPatchRegs[25]);
                            buffer.Serialize(ref epsmPatchRegs[26]);
                            buffer.Serialize(ref epsmPatchRegs[27]);
                            buffer.Serialize(ref epsmPatchRegs[28]);
                            buffer.Serialize(ref epsmPatchRegs[29]);
                            buffer.Serialize(ref epsmPatchRegs[30]);
                            break;
                        case global::FamiStudio.ExpansionType.Vrc6:
                            // At version 10 (FamiStudio 3.0.0) we added a master volume to the VRC6 saw.
                            if (buffer.Version >= 10)
                                buffer.Serialize(ref vrc6SawMasterVolume);
                            else
                                vrc6SawMasterVolume = Vrc6SawMasterVolumeType.Full;
                            break;
                    }
                }
            }

            byte envelopeMask = 0;
            if (buffer.IsWriting)
            {
                for (int i = 0; i < EnvelopeType.Count; i++)
                {
                    if (envelopes[i] != null)
                        envelopeMask = (byte)(envelopeMask | (1 << i));
                }
            }
            buffer.Serialize(ref envelopeMask);

            for (int i = 0; i < EnvelopeType.Count; i++)
            {
                if ((envelopeMask & (1 << i)) != 0)
                {
                    if (buffer.IsReading)
                        envelopes[i] = new Envelope(i);
                    envelopes[i].SerializeState(buffer);
                }
                else
                {
                    envelopes[i] = null;
                }
            }

            if (buffer.Version < 5)
            {
                envelopes[EnvelopeType.DutyCycle] = new Envelope(EnvelopeType.DutyCycle);
                if (dutyCycle != 0)
                {
                    envelopes[EnvelopeType.DutyCycle].Length = 1;
                    envelopes[EnvelopeType.DutyCycle].Values[0] = (sbyte)dutyCycle;
                }
            }
        }
    }

    public static class Vrc7InstrumentPatch
    {
        public const byte Custom       =  0;
        public const byte Bell         =  1;
        public const byte Guitar       =  2;
        public const byte Piano        =  3;
        public const byte Flute        =  4;
        public const byte Clarinet     =  5;
        public const byte RattlingBell =  6;
        public const byte Trumpet      =  7;
        public const byte ReedOrgan    =  8;
        public const byte SoftBell     =  9;
        public const byte Xylophone    = 10;
        public const byte Vibraphone   = 11;
        public const byte Brass        = 12;
        public const byte BassGuitar   = 13;
        public const byte Synthetizer  = 14;
        public const byte Chorus       = 15;

        public struct Vrc7PatchInfo
        {
            public string name;
            public byte[] data;
        };

        public static readonly Vrc7PatchInfo[] Infos = new[]
        {
            new Vrc7PatchInfo() { name = "Custom",       data = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }, // Custom      
            new Vrc7PatchInfo() { name = "Bell",         data = new byte[] { 0x03, 0x21, 0x05, 0x06, 0xe8, 0x81, 0x42, 0x27 } }, // Bell        
            new Vrc7PatchInfo() { name = "Guitar",       data = new byte[] { 0x13, 0x41, 0x14, 0x0d, 0xd8, 0xf6, 0x23, 0x12 } }, // Guitar      
            new Vrc7PatchInfo() { name = "Piano",        data = new byte[] { 0x11, 0x11, 0x08, 0x08, 0xfa, 0xb2, 0x20, 0x12 } }, // Piano       
            new Vrc7PatchInfo() { name = "Flute",        data = new byte[] { 0x31, 0x61, 0x0c, 0x07, 0xa8, 0x64, 0x61, 0x27 } }, // Flute       
            new Vrc7PatchInfo() { name = "Clarinet",     data = new byte[] { 0x32, 0x21, 0x1e, 0x06, 0xe1, 0x76, 0x01, 0x28 } }, // Clarinet    
            new Vrc7PatchInfo() { name = "RattlingBell", data = new byte[] { 0x02, 0x01, 0x06, 0x00, 0xa3, 0xe2, 0xf4, 0xf4 } }, // RattlingBell
            new Vrc7PatchInfo() { name = "Trumpet",      data = new byte[] { 0x21, 0x61, 0x1d, 0x07, 0x82, 0x81, 0x11, 0x07 } }, // Trumpet     
            new Vrc7PatchInfo() { name = "ReedOrgan",    data = new byte[] { 0x23, 0x21, 0x22, 0x17, 0xa2, 0x72, 0x01, 0x17 } }, // ReedOrgan   
            new Vrc7PatchInfo() { name = "SoftBell",     data = new byte[] { 0x35, 0x11, 0x25, 0x00, 0x40, 0x73, 0x72, 0x01 } }, // SoftBell    
            new Vrc7PatchInfo() { name = "Xylophone",    data = new byte[] { 0xb5, 0x01, 0x0f, 0x0F, 0xa8, 0xa5, 0x51, 0x02 } }, // Xylophone   
            new Vrc7PatchInfo() { name = "Vibraphone",   data = new byte[] { 0x17, 0xc1, 0x24, 0x07, 0xf8, 0xf8, 0x22, 0x12 } }, // Vibraphone  
            new Vrc7PatchInfo() { name = "Brass",        data = new byte[] { 0x71, 0x23, 0x11, 0x06, 0x65, 0x74, 0x18, 0x16 } }, // Brass       
            new Vrc7PatchInfo() { name = "BassGuitar",   data = new byte[] { 0x01, 0x02, 0xd3, 0x05, 0xc9, 0x95, 0x03, 0x02 } }, // BassGuitar  
            new Vrc7PatchInfo() { name = "Synthesizer",  data = new byte[] { 0x61, 0x63, 0x0c, 0x00, 0x94, 0xC0, 0x33, 0xf6 } }, // Synthesizer 
            new Vrc7PatchInfo() { name = "Chorus",       data = new byte[] { 0x21, 0x72, 0x0d, 0x00, 0xc1, 0xd5, 0x56, 0x06 } }  // Chorus      
        };
    }


    public static class EPSMInstrumentPatch
    {
        public const byte Custom = 0;
        public const byte Default = 1;
        /*public const byte GrandPiano = 2;
        public const byte BrightPiano = 3;
        public const byte ElectricPiano_Animatics = 4;
        public const byte HonkyTonk_SonicModded = 5;
        public const byte RhodesPiano = 6;
        public const byte ChorusPianoTiniToon = 7;
        public const byte Harpsichord_Adams = 8;
        public const byte Clavinet = 9;
        public const byte Celesta = 10;
        public const byte Glockenspiel = 11;
        public const byte MusicBox = 12;
        public const byte Vibraphone_Nineko = 13;
        public const byte Marimba_Aladdin = 14;
        public const byte Xylaphone_Aladdin = 15;
        public const byte TubularBells_Animatics = 16;
        public const byte Dulcimer = 17;
        public const byte Hammond_Nineko = 18;
        public const byte PercusiveOrgain_Action52 = 19;
        public const byte RockOrgan = 20;
        public const byte ChurchOrgan = 21;
        public const byte ReedOrgan = 22;
        public const byte Accordeon = 23;
        public const byte Harmonica_Sonic = 24;
        public const byte Tango_Accordion = 25;
        public const byte NylonGuitarHellRoll = 26;
        public const byte SteelGuitarHellRoll = 27;
        public const byte JazzGuitar = 28;
        public const byte CleanGuitar_Columns_III = 29;
        public const byte MutedGuitar_Aladdin = 30;
        public const byte Overdrive_Thunder_Force_IV = 31;
        public const byte Distortion_Thunder_Force_IV = 32;
        public const byte Guitar_HarmonicsHellfire = 33;
        public const byte AcousticBass_Sonic = 34;
        public const byte FingerBass_Sonic = 35;
        public const byte PickBass_Sonic = 36;
        public const byte FretlessBassAladdin = 37;
        public const byte SlapBass1 = 38;
        public const byte SlapBass2 = 39;
        public const byte SynBass1_DynaBros = 40;
        public const byte SynBass2_Nineko = 41;
        public const byte Violin = 42;
        public const byte Viola = 43;
        public const byte Cello = 44;
        public const byte Controlbass = 45;
        public const byte TremoloStrings = 46;
        public const byte PizzikatoStrings = 47;
        public const byte OrchestralHarp = 48;
        public const byte Timpany = 49;
        public const byte StringEssemble1 = 50;
        public const byte StringEssemble2 = 51;
        public const byte SynStrings_1 = 52;
        public const byte SynString2_Aladdin = 53;
        public const byte Choir_Aahs = 54;
        public const byte Voice = 55;
        public const byte SynthVoice = 56;
        public const byte OrchestraHit = 57;
        public const byte Trumpet_Sonic = 58;
        public const byte Trombone_Aladdin = 59;
        public const byte Tuba_Aladdin = 60;
        public const byte MutedTrumpet_Sonic = 61;
        public const byte FrenchHorn = 62;
        public const byte BrassSection_Greendog = 63;
        public const byte SynBrass1 = 64;
        public const byte SynBrass2 = 65;
        public const byte SopranoSax = 66;
        public const byte AltoSax = 67;
        public const byte TenorSax = 68;
        public const byte BaritoneSax = 69;
        public const byte Oboe_Aladdin = 70;
        public const byte EnglishHorn = 71;
        public const byte Bassoon_Aladdin = 72;
        public const byte Clarinet_Aladdin = 73;
        public const byte Piccolo_Aladdin = 74;
        public const byte Flute = 75;
        public const byte Recorder = 76;
        public const byte PanFlute = 77;
        public const byte BottleBlow = 78;
        public const byte Shakuhachi_Alisia_Dragoon = 79;
        public const byte Whistle_Aladdin = 80;
        public const byte Ocarina = 81;
        public const byte Square_Ported_from_DMX = 82;
        public const byte Saw = 83;
        public const byte Calliope = 84;
        public const byte Lead4Chif_Sonic = 85;
        public const byte Lead5Char_Nineko = 86;
        public const byte LeadVoice = 87;
        public const byte LEad7Fifts_Animatics = 88;
        public const byte Lead8Bass_TinyToon = 89;
        public const byte Pad1NewAge = 90;
        public const byte Pad_Warm_Ported_from_DMX = 91;
        public const byte PolySynth = 92;
        public const byte PadChoir = 93;
        public const byte Bowed = 94;
        public const byte Metallic = 95;
        public const byte PadHalo = 96;
        public const byte Sweep = 97;
        public const byte FX_Rain = 98;
        public const byte FX_SndTrack_ThunderForce_IV = 99;
        public const byte FXCrystal_Alisia_Dragoon = 100;
        public const byte AtmoSphere_Alisia_Dragoon = 101;
        public const byte BrightNess = 102;
        public const byte Goblins = 103;
        public const byte Echos = 104;
        public const byte SciFi = 105;
        public const byte Sitar = 106;
        public const byte Banjo = 107;
        public const byte Shamisen = 108;
        public const byte Koto = 109;
        public const byte Kalimba = 110;
        public const byte BagPipe = 111;
        public const byte Fiddle = 112;
        public const byte Shanai_Aladdin = 113;
        public const byte TinkleBell = 114;
        public const byte Agogo = 115;
        public const byte SteelDrums = 116;
        public const byte WoodBlock = 117;
        public const byte Taiko_Drum = 118;
        public const byte Melodic_Tom = 119;
        public const byte SynDrum_Alisia_Dragoon = 120;
        public const byte Reverse_Cymbell = 121;
        public const byte Guitar_Fret_Noise = 122;
        public const byte Breath_Noise = 123;
        public const byte SeaShore = 124;
        public const byte BirdTweet = 125;
        public const byte Telephone = 126;
        public const byte Helicopter = 127;
        public const byte Applause = 128;
        public const byte Gunshot = 129;
        public const byte Sticks = 130;
        public const byte Square_Click = 131;
        public const byte MetronomeClick = 132;
        public const byte Metronome_Bell = 133;
        public const byte BassDrum_ = 134;
        public const byte BassDrum1 = 135;
        public const byte StickSide = 136;
        public const byte AcusticSnare_Action52 = 137;
        public const byte HandClap_Action54 = 138;
        public const byte AcusticSnare_Action52_2 = 139;
        public const byte Low_Floor_Tom = 140;
        public const byte ClosedHihat = 141;
        public const byte High_Floor_Tom = 142;
        public const byte PedalHihat = 143;
        public const byte Low_Tom = 144;
        public const byte OpenHiHat = 145;
        public const byte Low_med_Tom = 146;
        public const byte High_med_Tom = 147;
        public const byte Crash_Animatics = 148;
        public const byte High_Tom_ = 149;
        public const byte RideCymbell1 = 150;
        public const byte Chinese_Crash_Animatics = 151;
        public const byte Ride_Bell = 152;
        public const byte Tamborine = 153;
        public const byte Splash_Crash_Animatics = 154;
        public const byte CowBell = 155;
        public const byte Crash_2_Animatics = 156;
        public const byte VibeSlap = 157;
        public const byte RideCymbell2 = 158;
        public const byte HiBo = 159;
        public const byte LoBo = 160;
        public const byte MuHiCo = 161;
        public const byte OpHiCo = 162;
        public const byte LowCo = 163;
        public const byte HighTimbale = 164;
        public const byte LowTimbale = 165;
        public const byte HiAgogo = 166;
        public const byte LoAgogo = 167;
        public const byte Cabasa = 168;
        public const byte Maracas = 169;
        public const byte ShortWhistle = 170;
        public const byte LongWhistle = 171;
        public const byte Short_Guiro = 172;
        public const byte Long_Guiro = 173;
        public const byte WoodBlock_1 = 174;
        public const byte WoodBlock_2 = 175;
        public const byte WoodBlock_3 = 176;
        public const byte MuteCuika = 177;
        public const byte OpenCuika = 178;
        public const byte MuteTriangle = 179;
        public const byte OpenTriangle = 180;
        public const byte Shaker = 181;
        public const byte JingleBells = 182;
        public const byte BellTree = 183;
        public const byte Castanets = 184;
        public const byte MuteSurdo = 185;
        public const byte OpenSurdo = 186;*/


        public struct EPSMPatchInfo
        {
            public string name;
            public byte[] data;
        };

        public static readonly EPSMPatchInfo[] Infos = new[]
        {
            new EPSMPatchInfo() { name = "Custom",       data = new byte[] { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }, // Custom  
            new EPSMPatchInfo() { name = "Default",      data = new byte[] { 0x04, 0xc0, 0x00, 0x20, 0x1f, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x07, 0x00, 0x00, 0x20, 0x1f, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x07, 0x00, 0x00 } }, // Custom        
            //new EPSMPatchInfo() { name = "Bell",         data = new byte[] { 0x03, 0x21, 0x05, 0x06, 0xe8, 0x81, 0x42, 0x27, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } }, // Bell 
                                                                               //0xB0, 0xB4, 0x30, 0x40, 0x50, 0x60, 0x70, 0x80, 0x90, 0x38, 0x48, 0x58, 0x68, 0x78, 0x88, 0x98, 0x34, 0x44, 0x54, 0x64, 0x74, 0x84, 0x94, 0x4c, 0x5c, 0x6c, 0x7c, 0x8c, 0x9c, 0x22
            /*new EPSMPatchInfo() { name = "GrandPiano", data = new byte[] { 0x02, 0xC0, 0x01, 0x27, 0x5A, 0x07, 0x04, 0x71, 0x00, 0x72, 0x04, 0xDF, 0x17, 0x0F, 0x91, 0x00, 0x64, 0x24, 0x58, 0x09, 0x09, 0x66, 0x00, 0x31, 0x00, 0x9B, 0x04, 0x04, 0xA5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BrightPiano", data = new byte[] { 0x3D, 0xC0, 0x24, 0x21, 0x5B, 0x09, 0x05, 0xB6, 0x00, 0x21, 0x03, 0x5B, 0x85, 0x05, 0xA6, 0x00, 0x54, 0x0D, 0x5B, 0x09, 0x09, 0x76, 0x00, 0x56, 0x04, 0x5B, 0x09, 0x08, 0x36, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ElectricPiano (Animatics)", data = new byte[] { 0x04, 0xC0, 0x71, 0x21, 0x56, 0x05, 0x06, 0x64, 0x00, 0x01, 0x00, 0x99, 0x85, 0x04, 0x15, 0x00, 0x42, 0x1A, 0x54, 0x07, 0x06, 0x64, 0x00, 0x31, 0x07, 0x99, 0x84, 0x04, 0x65, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "HonkyTonk (SonicModded)", data = new byte[] { 0x0D, 0xC0, 0x32, 0x23, 0x1F, 0x0A, 0x05, 0xF6, 0x00, 0x04, 0x04, 0x19, 0x07, 0x00, 0xD6, 0x00, 0x02, 0x0B, 0x19, 0x06, 0x06, 0x26, 0x00, 0x31, 0x0D, 0x19, 0x09, 0x00, 0x26, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "RhodesPiano", data = new byte[] { 0x34, 0xC0, 0x4C, 0x39, 0x5F, 0x07, 0x00, 0xB8, 0x00, 0x01, 0x09, 0x9F, 0x84, 0x04, 0x18, 0x00, 0x41, 0x22, 0x96, 0x05, 0x00, 0xB8, 0x00, 0x01, 0x09, 0x9F, 0x84, 0x04, 0x68, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ChorusPiano(TiniToon)", data = new byte[] { 0x37, 0xC0, 0x7A, 0x1E, 0x1F, 0x0A, 0x07, 0xF6, 0x00, 0x32, 0x0C, 0x1F, 0x0D, 0x00, 0xF8, 0x00, 0x51, 0x0A, 0x59, 0x05, 0x02, 0xF6, 0x00, 0x11, 0x14, 0x19, 0x0A, 0x02, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Harpsichord (Adams)", data = new byte[] { 0x39, 0xC0, 0x16, 0x26, 0x9F, 0x80, 0x01, 0x05, 0x00, 0x3A, 0x21, 0xDF, 0x00, 0x01, 0x06, 0x00, 0x50, 0x23, 0xDF, 0x80, 0x00, 0x02, 0x00, 0x70, 0x06, 0x1F, 0x06, 0x06, 0x47, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Clavinet", data = new byte[] { 0x39, 0xC0, 0x11, 0x1C, 0x9F, 0x80, 0x01, 0x05, 0x00, 0x31, 0x21, 0x9F, 0x00, 0x01, 0x06, 0x00, 0x51, 0x1E, 0xDF, 0x80, 0x00, 0x02, 0x00, 0x71, 0x06, 0x1F, 0x06, 0x06, 0x47, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Celesta", data = new byte[] { 0x00, 0xC0, 0x13, 0x08, 0x53, 0x01, 0x1B, 0x40, 0x00, 0x71, 0x11, 0x5B, 0x03, 0x1A, 0x06, 0x00, 0x3B, 0x22, 0x1D, 0x0F, 0x1F, 0xF8, 0x00, 0x71, 0x00, 0x1F, 0x00, 0x05, 0x06, 0x00, 0x30 } },
            new EPSMPatchInfo() { name = "Glockenspiel", data = new byte[] { 0x0C, 0xC0, 0x17, 0x1E, 0x1F, 0x07, 0x00, 0xF2, 0x00, 0x71, 0x00, 0x9F, 0x07, 0x00, 0xF3, 0x00, 0x35, 0x33, 0x1F, 0x0B, 0x00, 0xF6, 0x00, 0x71, 0x0F, 0x9F, 0x07, 0x00, 0xF3, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MusicBox", data = new byte[] { 0x0C, 0xC0, 0x17, 0x1E, 0x0E, 0x0E, 0x00, 0xF6, 0x00, 0x71, 0x00, 0x1F, 0x07, 0x00, 0xF4, 0x00, 0x3A, 0x33, 0x0D, 0x0C, 0x00, 0xF6, 0x00, 0x70, 0x0F, 0x1F, 0x07, 0x00, 0xF4, 0x00, 0x30 } },
            new EPSMPatchInfo() { name = "Vibraphone (Nineko)", data = new byte[] { 0x3E, 0xC0, 0x38, 0x28, 0x59, 0x0F, 0x02, 0xA6, 0x00, 0x01, 0x00, 0x59, 0x81, 0x01, 0xA6, 0x00, 0x7A, 0x23, 0x5F, 0x10, 0x01, 0x66, 0x00, 0x34, 0x00, 0x9C, 0x0A, 0x01, 0x64, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Marimba (Aladdin)", data = new byte[] { 0x04, 0xC0, 0x45, 0x1B, 0x1F, 0x93, 0x07, 0x7E, 0x00, 0x31, 0x00, 0x1E, 0x0F, 0x07, 0xF7, 0x00, 0x22, 0x28, 0x9F, 0x92, 0x04, 0x82, 0x00, 0x01, 0x0B, 0x1F, 0x0F, 0x02, 0xF7, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Xylaphone (Aladdin)", data = new byte[] { 0x00, 0xC0, 0x70, 0x00, 0x40, 0x9D, 0x1F, 0x9F, 0x00, 0x70, 0x00, 0x5F, 0x80, 0x18, 0x0F, 0x00, 0x63, 0x1F, 0x5D, 0x0F, 0x1F, 0xFF, 0x00, 0x70, 0x00, 0x1F, 0x00, 0x0C, 0x06, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "TubularBells (Animatics)", data = new byte[] { 0x2C, 0xC0, 0x77, 0x1E, 0x16, 0x05, 0x1E, 0xF4, 0x00, 0x32, 0x00, 0x18, 0x03, 0x1F, 0xC4, 0x00, 0x37, 0x1E, 0x16, 0x06, 0x1E, 0x84, 0x00, 0x72, 0x00, 0x13, 0x02, 0x1F, 0x94, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Dulcimer", data = new byte[] { 0x36, 0xC0, 0x04, 0x11, 0x53, 0x11, 0x09, 0x43, 0x00, 0x01, 0x02, 0x8D, 0x08, 0x00, 0xF4, 0x00, 0x01, 0x11, 0x8D, 0x0A, 0x00, 0xF5, 0x00, 0x01, 0x00, 0x96, 0x10, 0x00, 0xF7, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Hammond (Nineko)", data = new byte[] { 0x27, 0xC0, 0x14, 0x11, 0x5C, 0x00, 0x04, 0xFA, 0x00, 0x30, 0x17, 0x5C, 0x00, 0x1B, 0xF8, 0x00, 0x51, 0x0F, 0x5C, 0x00, 0x04, 0xF8, 0x00, 0x62, 0x17, 0x5C, 0x00, 0x04, 0xFA, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PercusiveOrgain (Action52)", data = new byte[] { 0x04, 0xC0, 0x0E, 0x15, 0x16, 0x17, 0x0B, 0xB8, 0x00, 0x06, 0x07, 0x0F, 0x09, 0x00, 0x28, 0x00, 0x11, 0x11, 0x14, 0x1C, 0x05, 0x2F, 0x00, 0x01, 0x0B, 0x13, 0x01, 0x1F, 0xAF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "RockOrgan", data = new byte[] { 0x24, 0xC0, 0x13, 0x19, 0x54, 0x8C, 0x00, 0x2A, 0x00, 0x01, 0x00, 0x94, 0x00, 0x00, 0x0A, 0x00, 0x01, 0x18, 0x94, 0x80, 0x00, 0x0A, 0x00, 0x52, 0x00, 0x94, 0x00, 0x00, 0x0A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ChurchOrgan", data = new byte[] { 0x16, 0xC0, 0x13, 0x1B, 0x92, 0x0A, 0x00, 0x23, 0x00, 0x01, 0x09, 0x0C, 0x0A, 0x00, 0x15, 0x00, 0x04, 0x06, 0x12, 0x0A, 0x00, 0x29, 0x00, 0x00, 0x04, 0x0C, 0x0A, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ReedOrgan", data = new byte[] { 0x34, 0xC0, 0x11, 0x19, 0x98, 0x10, 0x00, 0x16, 0x00, 0x01, 0x00, 0x0B, 0x00, 0x00, 0x06, 0x00, 0x01, 0x15, 0x18, 0x00, 0x00, 0x05, 0x00, 0x02, 0x00, 0x8B, 0x80, 0x00, 0x06, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Accordeon", data = new byte[] { 0x32, 0xC0, 0x31, 0x1E, 0x12, 0x05, 0x00, 0x17, 0x00, 0x37, 0x15, 0x0F, 0x08, 0x00, 0x28, 0x00, 0x72, 0x34, 0x0A, 0x09, 0x03, 0x29, 0x00, 0x02, 0x00, 0x8B, 0x16, 0x00, 0x19, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Harmonica (Sonic)", data = new byte[] { 0x38, 0xC0, 0x3A, 0x2D, 0xD4, 0x05, 0x00, 0x99, 0x00, 0x0A, 0x28, 0x14, 0x08, 0x00, 0x09, 0x00, 0x11, 0x27, 0x50, 0x02, 0x00, 0x09, 0x00, 0x02, 0x00, 0x0E, 0x88, 0x00, 0x1A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Tango Accordion", data = new byte[] { 0x34, 0xC0, 0x13, 0x19, 0x0B, 0x04, 0x00, 0x1A, 0x00, 0x01, 0x07, 0x8A, 0x04, 0x00, 0x2A, 0x00, 0x03, 0x1A, 0x0A, 0x04, 0x00, 0x1A, 0x00, 0x52, 0x08, 0x8A, 0x04, 0x00, 0x2A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "NylonGuitar(HellRoll)", data = new byte[] { 0x18, 0xC0, 0x05, 0x30, 0x1F, 0x12, 0x00, 0x26, 0x00, 0x30, 0x13, 0x1F, 0x0A, 0x04, 0x26, 0x00, 0x31, 0x2D, 0x1F, 0x0E, 0x04, 0x26, 0x00, 0x00, 0x00, 0x5F, 0x0A, 0x03, 0x26, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SteelGuitar(HellRoll)", data = new byte[] { 0x18, 0xC0, 0x05, 0x20, 0x1F, 0x12, 0x00, 0x26, 0x00, 0x30, 0x13, 0x1F, 0x0A, 0x04, 0x26, 0x00, 0x31, 0x2D, 0x1F, 0x0E, 0x04, 0x26, 0x00, 0x00, 0x00, 0x5F, 0x0A, 0x03, 0x26, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "JazzGuitar", data = new byte[] { 0x28, 0xC0, 0x02, 0x1E, 0x5F, 0x04, 0x00, 0xF6, 0x00, 0x33, 0x2B, 0x5F, 0x04, 0x00, 0xF6, 0x00, 0x31, 0x2A, 0x9F, 0x04, 0x00, 0xF6, 0x00, 0x01, 0x00, 0x1F, 0x04, 0x00, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "CleanGuitar (Columns III)", data = new byte[] { 0x38, 0xC0, 0x58, 0x27, 0x5F, 0x07, 0x00, 0xF6, 0x00, 0x33, 0x1D, 0x5F, 0x0A, 0x00, 0xF9, 0x00, 0x53, 0x22, 0x5F, 0x04, 0x00, 0xF8, 0x00, 0x31, 0x00, 0x5F, 0x1F, 0x04, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MutedGuitar (Aladdin)", data = new byte[] { 0x1A, 0xC0, 0x33, 0x1C, 0x54, 0x17, 0x09, 0x8A, 0x00, 0x04, 0x0B, 0x58, 0x17, 0x01, 0xBB, 0x00, 0x31, 0x05, 0x5B, 0x1B, 0x07, 0x8B, 0x00, 0x01, 0x00, 0x14, 0x12, 0x04, 0x0C, 0x00, 0x04 } },
            new EPSMPatchInfo() { name = "Overdrive (Thunder Force IV)", data = new byte[] { 0x3A, 0xC0, 0x34, 0x19, 0x17, 0x03, 0x00, 0x17, 0x00, 0x51, 0x0D, 0x13, 0x03, 0x00, 0x57, 0x00, 0x31, 0x19, 0x1B, 0x00, 0x00, 0x57, 0x00, 0x51, 0x00, 0x17, 0x03, 0x00, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Distortion (Thunder Force IV)", data = new byte[] { 0x28, 0xC0, 0x33, 0x0E, 0xDF, 0x14, 0x00, 0x11, 0x00, 0x53, 0x23, 0xDC, 0x05, 0x01, 0x21, 0x00, 0x70, 0x0F, 0x1F, 0x01, 0x00, 0x13, 0x00, 0x30, 0x04, 0x1F, 0x81, 0x1D, 0xF8, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Guitar Harmonics(Hellfire)", data = new byte[] { 0x33, 0xC0, 0x0A, 0x1C, 0x90, 0x06, 0x08, 0xFC, 0x00, 0x78, 0x0D, 0x95, 0x06, 0x07, 0x81, 0x00, 0x32, 0x14, 0x9F, 0x02, 0x00, 0xF6, 0x00, 0x11, 0x00, 0x10, 0x01, 0x0F, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "AcousticBass (Sonic)", data = new byte[] { 0x3A, 0xC0, 0x20, 0x21, 0x1E, 0x0A, 0x05, 0xA4, 0x00, 0x23, 0x25, 0x1F, 0x0A, 0x07, 0x85, 0x00, 0x60, 0x28, 0x1F, 0x08, 0x0A, 0x96, 0x00, 0x01, 0x00, 0x1F, 0x07, 0x07, 0x78, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "FingerBass (Sonic)", data = new byte[] { 0x08, 0xC0, 0x09, 0x25, 0x1F, 0x12, 0x00, 0x2F, 0x00, 0x70, 0x30, 0x1F, 0x0E, 0x04, 0x2F, 0x00, 0x30, 0x13, 0x5F, 0x0A, 0x04, 0x2F, 0x00, 0x00, 0x00, 0x5F, 0x0A, 0x03, 0x2F, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PickBass (Sonic)", data = new byte[] { 0x39, 0xC0, 0x06, 0x23, 0x1F, 0x11, 0x05, 0x2F, 0x00, 0x60, 0x2C, 0x1F, 0x0F, 0x04, 0x2F, 0x00, 0x30, 0x17, 0x5F, 0x13, 0x04, 0x2F, 0x00, 0x01, 0x00, 0x5F, 0x09, 0x03, 0x2F, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "FretlessBass(Aladdin)", data = new byte[] { 0x06, 0xC0, 0x00, 0x1D, 0x1A, 0x09, 0x07, 0x0B, 0x00, 0x00, 0x00, 0x4D, 0x03, 0x00, 0x6A, 0x00, 0x50, 0x00, 0x92, 0x0B, 0x13, 0xEA, 0x00, 0x60, 0x09, 0x4A, 0x0C, 0x00, 0xFA, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SlapBass1", data = new byte[] { 0x20, 0xC0, 0x3F, 0x13, 0x9F, 0x0E, 0x08, 0x27, 0x00, 0x03, 0x38, 0x9F, 0x0F, 0x08, 0x27, 0x00, 0x00, 0x18, 0x5F, 0x0D, 0x08, 0x27, 0x00, 0x01, 0x00, 0x5F, 0x07, 0x08, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SlapBass2", data = new byte[] { 0x20, 0xC0, 0x3F, 0x0E, 0x9F, 0x0E, 0x06, 0x27, 0x00, 0x03, 0x38, 0x9F, 0x0F, 0x08, 0x27, 0x00, 0x00, 0x18, 0x5F, 0x0D, 0x08, 0x27, 0x00, 0x01, 0x00, 0x5F, 0x07, 0x08, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynBass1 (DynaBros.)", data = new byte[] { 0x3D, 0xC0, 0x44, 0x17, 0x55, 0x1E, 0x0C, 0x0B, 0x00, 0x14, 0x00, 0x59, 0x1E, 0x0A, 0x0A, 0x00, 0x02, 0x05, 0x54, 0x1E, 0x09, 0x09, 0x00, 0x33, 0x18, 0x54, 0x1E, 0x05, 0x89, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynBass2 (Nineko)", data = new byte[] { 0x20, 0xC0, 0x36, 0x19, 0xDF, 0x07, 0x07, 0x20, 0x00, 0x35, 0x37, 0xDF, 0x06, 0x06, 0x16, 0x00, 0x30, 0x13, 0x9F, 0x09, 0x06, 0x17, 0x00, 0x31, 0x00, 0x9F, 0x06, 0x08, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Violin", data = new byte[] { 0x3A, 0xC0, 0x31, 0x1E, 0x0E, 0x04, 0x00, 0x15, 0x00, 0x37, 0x1F, 0x0C, 0x10, 0x00, 0x04, 0x00, 0x70, 0x31, 0x08, 0x09, 0x03, 0x07, 0x00, 0x02, 0x03, 0x8A, 0x0A, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Viola", data = new byte[] { 0x3A, 0xC0, 0x31, 0x1E, 0x0E, 0x04, 0x00, 0x15, 0x00, 0x34, 0x1E, 0x0C, 0x10, 0x00, 0x04, 0x00, 0x70, 0x3D, 0x08, 0x09, 0x03, 0x07, 0x00, 0x02, 0x03, 0x8A, 0x0A, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Cello", data = new byte[] { 0x3A, 0xC0, 0x31, 0x28, 0x0E, 0x04, 0x00, 0x15, 0x00, 0x35, 0x1E, 0x4C, 0x10, 0x00, 0x04, 0x00, 0x70, 0x2F, 0x0C, 0x09, 0x03, 0x07, 0x00, 0x02, 0x03, 0x8C, 0x0A, 0x00, 0x16, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Controlbass", data = new byte[] { 0x3A, 0xC0, 0x31, 0x2B, 0x0E, 0x04, 0x00, 0x15, 0x00, 0x34, 0x2C, 0x0C, 0x10, 0x00, 0x04, 0x00, 0x70, 0x1F, 0x0C, 0x09, 0x03, 0x07, 0x00, 0x02, 0x00, 0x8C, 0x0A, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "TremoloStrings", data = new byte[] { 0x3C, 0xC0, 0x31, 0x15, 0xCC, 0x81, 0x00, 0x13, 0x00, 0x01, 0x06, 0x0B, 0x0A, 0x00, 0x26, 0x00, 0x01, 0x13, 0x89, 0x0B, 0x00, 0x44, 0x00, 0x01, 0x00, 0x0A, 0x0A, 0x00, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PizzikatoStrings", data = new byte[] { 0x35, 0xC0, 0x14, 0x00, 0xD1, 0x14, 0x0B, 0xA7, 0x00, 0x11, 0x00, 0x4E, 0x14, 0x15, 0xF7, 0x00, 0x12, 0x01, 0x51, 0x0C, 0x14, 0xF6, 0x00, 0x11, 0x05, 0x51, 0x0A, 0x11, 0xC5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OrchestralHarp", data = new byte[] { 0x04, 0xC0, 0x02, 0x1B, 0x1F, 0x0A, 0x00, 0x14, 0x00, 0x11, 0x00, 0x1F, 0x0E, 0x05, 0x64, 0x00, 0x51, 0x7F, 0x5F, 0x0A, 0x02, 0x74, 0x00, 0x50, 0x7F, 0x4E, 0x0B, 0x02, 0xF4, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Timpany", data = new byte[] { 0x0C, 0xC0, 0x00, 0x0A, 0x52, 0x0E, 0x00, 0xF5, 0x00, 0x01, 0x00, 0x1F, 0x08, 0x00, 0xF4, 0x00, 0x01, 0x00, 0x1F, 0x0C, 0x00, 0xF8, 0x00, 0x02, 0x22, 0x0F, 0x0C, 0x00, 0xFD, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "StringEssemble1", data = new byte[] { 0x3C, 0xC0, 0x31, 0x1D, 0xCB, 0x0B, 0x00, 0x02, 0x00, 0x05, 0x06, 0x0B, 0x0A, 0x00, 0x26, 0x00, 0x01, 0x1C, 0x8B, 0x8A, 0x00, 0x13, 0x00, 0x01, 0x00, 0x0C, 0x0A, 0x00, 0x16, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "StringEssemble2", data = new byte[] { 0x3C, 0xC0, 0x31, 0x1D, 0xCB, 0x0B, 0x00, 0x01, 0x00, 0x01, 0x06, 0x07, 0x08, 0x00, 0x25, 0x00, 0x01, 0x1C, 0x8B, 0x8A, 0x00, 0x11, 0x00, 0x01, 0x03, 0x07, 0x08, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynStrings 1", data = new byte[] { 0x34, 0xC0, 0x11, 0x15, 0x18, 0x82, 0x00, 0x62, 0x00, 0x01, 0x18, 0x07, 0x00, 0x00, 0x05, 0x00, 0x31, 0x1C, 0x18, 0x81, 0x00, 0xB2, 0x00, 0x01, 0x02, 0x07, 0x00, 0x00, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynString2 (Aladdin)", data = new byte[] { 0x32, 0xC0, 0x30, 0x23, 0x05, 0x04, 0x00, 0x06, 0x00, 0x34, 0x34, 0x85, 0x03, 0x00, 0xA5, 0x00, 0x00, 0x20, 0x0C, 0x01, 0x03, 0x74, 0x00, 0x00, 0x00, 0x45, 0x8A, 0x00, 0x04, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Choir Aahs", data = new byte[] { 0x04, 0xC0, 0x30, 0x2A, 0x4E, 0x80, 0x00, 0x51, 0x00, 0x30, 0x05, 0x4C, 0x80, 0x00, 0x05, 0x00, 0x70, 0x1E, 0x8A, 0x00, 0x00, 0x51, 0x00, 0x70, 0x02, 0x89, 0x80, 0x00, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Voice", data = new byte[] { 0x34, 0xC0, 0x75, 0x00, 0x12, 0x0A, 0x03, 0x15, 0x00, 0x03, 0x25, 0x54, 0x0A, 0x02, 0x65, 0x00, 0x31, 0x0E, 0x90, 0x0D, 0x05, 0x25, 0x00, 0x01, 0x00, 0x4B, 0x84, 0x00, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynthVoice", data = new byte[] { 0x20, 0xC0, 0x3A, 0x4C, 0x4E, 0x80, 0x00, 0x51, 0x00, 0x37, 0x33, 0x4C, 0x80, 0x00, 0x05, 0x00, 0x70, 0x2E, 0x8A, 0x00, 0x00, 0x51, 0x00, 0x70, 0x00, 0x89, 0x80, 0x00, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OrchestraHit", data = new byte[] { 0x38, 0xC0, 0x00, 0x13, 0x4D, 0x0D, 0x00, 0xF5, 0x00, 0x01, 0x11, 0x15, 0x09, 0x00, 0xF3, 0x00, 0x01, 0x15, 0x0F, 0x05, 0x00, 0xF2, 0x00, 0x02, 0x00, 0x4F, 0x0A, 0x00, 0xF5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Trumpet (Sonic)", data = new byte[] { 0x3D, 0xC0, 0x02, 0x1C, 0x8E, 0x0E, 0x01, 0x13, 0x00, 0x04, 0x01, 0x0D, 0x0B, 0x00, 0xFD, 0x00, 0x02, 0x11, 0x0F, 0x0E, 0x00, 0x18, 0x00, 0x02, 0x00, 0x11, 0x0D, 0x00, 0x0E, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Trombone (Aladdin)", data = new byte[] { 0x2D, 0xC0, 0x00, 0x1A, 0x8C, 0x0D, 0x01, 0x2A, 0x00, 0x00, 0x05, 0x97, 0x87, 0x02, 0x1A, 0x00, 0x00, 0x0E, 0x8A, 0x08, 0x00, 0x2A, 0x00, 0x51, 0x00, 0x97, 0x87, 0x00, 0x1A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Tuba (Aladdin)", data = new byte[] { 0x3D, 0xC0, 0x00, 0x1B, 0x8C, 0x06, 0x01, 0x67, 0x00, 0x00, 0x02, 0x8C, 0x87, 0x02, 0x15, 0x00, 0x01, 0x00, 0x8C, 0x0D, 0x0A, 0x25, 0x00, 0x51, 0x09, 0x8E, 0x87, 0x00, 0x15, 0x00, 0x12 } },
            new EPSMPatchInfo() { name = "MutedTrumpet (Sonic)", data = new byte[] { 0x3D, 0xC0, 0x12, 0x15, 0x8F, 0x0E, 0x01, 0x13, 0x00, 0x02, 0x1F, 0x0D, 0x0B, 0x00, 0xFD, 0x00, 0x02, 0x4A, 0x0F, 0x0E, 0x00, 0x18, 0x00, 0x02, 0x00, 0x0F, 0x0D, 0x00, 0x0E, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "FrenchHorn", data = new byte[] { 0x3C, 0xC0, 0x01, 0x22, 0x87, 0x04, 0x00, 0x36, 0x00, 0x01, 0x00, 0x94, 0x00, 0x00, 0x05, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BrassSection (Greendog)", data = new byte[] { 0x35, 0xC0, 0x21, 0x1A, 0x8E, 0x00, 0x01, 0x47, 0x00, 0x31, 0x00, 0x9B, 0x05, 0x02, 0x36, 0x00, 0x20, 0x09, 0x95, 0x00, 0x02, 0x17, 0x00, 0x14, 0x06, 0x94, 0x80, 0x02, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynBrass1", data = new byte[] { 0x32, 0xC0, 0x01, 0x14, 0x14, 0x06, 0x00, 0xF6, 0x00, 0x31, 0x1C, 0x1F, 0x00, 0x00, 0x0D, 0x00, 0x71, 0x2A, 0x1F, 0x00, 0x00, 0x0C, 0x00, 0x01, 0x00, 0x0E, 0x00, 0x00, 0x07, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynBrass2", data = new byte[] { 0x3A, 0xC0, 0x31, 0x1E, 0x0F, 0x04, 0x00, 0x19, 0x00, 0x37, 0x1F, 0x0F, 0x10, 0x00, 0x08, 0x00, 0x72, 0x37, 0x0F, 0x09, 0x03, 0x08, 0x00, 0x02, 0x00, 0x8F, 0x0A, 0x00, 0x16, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SopranoSax", data = new byte[] { 0x35, 0xC0, 0x21, 0x20, 0x4E, 0x00, 0x01, 0x48, 0x00, 0x32, 0x0D, 0x49, 0x05, 0x02, 0x36, 0x00, 0x20, 0x0E, 0x49, 0x00, 0x02, 0x17, 0x00, 0x12, 0x00, 0x8A, 0x80, 0x02, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "AltoSax", data = new byte[] { 0x35, 0xC0, 0x21, 0x1A, 0x8E, 0x00, 0x01, 0x48, 0x00, 0x31, 0x05, 0x8A, 0x05, 0x02, 0x36, 0x00, 0x20, 0x0B, 0x51, 0x00, 0x02, 0x17, 0x00, 0x14, 0x04, 0x8B, 0x80, 0x02, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "TenorSax", data = new byte[] { 0x35, 0xC0, 0x21, 0x1E, 0x8E, 0x00, 0x01, 0x48, 0x00, 0x31, 0x05, 0x8A, 0x05, 0x02, 0x36, 0x00, 0x20, 0x0A, 0x51, 0x00, 0x02, 0x17, 0x00, 0x12, 0x04, 0x8B, 0x80, 0x02, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BaritoneSax", data = new byte[] { 0x35, 0xC0, 0x21, 0x17, 0x8E, 0x00, 0x01, 0x48, 0x00, 0x31, 0x05, 0x8E, 0x05, 0x02, 0x36, 0x00, 0x20, 0x0A, 0x91, 0x00, 0x02, 0x17, 0x00, 0x13, 0x04, 0x91, 0x80, 0x02, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Oboe (Aladdin)", data = new byte[] { 0x38, 0xC0, 0x01, 0x27, 0x18, 0x97, 0x00, 0x0A, 0x00, 0x01, 0x1E, 0x10, 0x9F, 0x00, 0x0A, 0x00, 0x01, 0x28, 0x16, 0x1F, 0x00, 0x0A, 0x00, 0x04, 0x00, 0x18, 0x1F, 0x00, 0x0A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "EnglishHorn", data = new byte[] { 0x38, 0xC0, 0x01, 0x26, 0x18, 0x97, 0x00, 0x0A, 0x00, 0x01, 0x1E, 0x10, 0x9F, 0x00, 0x0A, 0x00, 0x01, 0x28, 0x16, 0x1F, 0x00, 0x0A, 0x00, 0x02, 0x00, 0x0D, 0x1F, 0x00, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Bassoon (Aladdin)", data = new byte[] { 0x38, 0xC0, 0x00, 0x27, 0x03, 0x97, 0x00, 0x0C, 0x00, 0x01, 0x23, 0x0F, 0x9F, 0x00, 0x0C, 0x00, 0x00, 0x24, 0x1F, 0x1F, 0x00, 0x0C, 0x00, 0x02, 0x00, 0x10, 0x1F, 0x00, 0x0C, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Clarinet (Aladdin)", data = new byte[] { 0x0C, 0xC0, 0x12, 0x1E, 0x89, 0x00, 0x01, 0x0A, 0x00, 0x71, 0x00, 0x12, 0x00, 0x00, 0x0A, 0x00, 0x72, 0x12, 0x4E, 0x8B, 0x1D, 0x8A, 0x00, 0x11, 0x0C, 0x13, 0x8F, 0x06, 0x2A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Piccolo (Aladdin)", data = new byte[] { 0x17, 0xC0, 0x32, 0x00, 0xC8, 0x00, 0x00, 0x08, 0x00, 0x72, 0x06, 0x88, 0x08, 0x00, 0x78, 0x00, 0x32, 0x11, 0x8C, 0x8C, 0x0A, 0xC8, 0x00, 0x12, 0x0B, 0xC8, 0x8D, 0x00, 0x78, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Flute", data = new byte[] { 0x34, 0xC0, 0x75, 0x00, 0x12, 0x0A, 0x03, 0x15, 0x00, 0x03, 0x31, 0x54, 0x0C, 0x02, 0x68, 0x00, 0x31, 0x16, 0x90, 0x0D, 0x00, 0x45, 0x00, 0x01, 0x00, 0x4C, 0x84, 0x00, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Recorder", data = new byte[] { 0x3B, 0xC0, 0x71, 0x08, 0x52, 0x0E, 0x03, 0x65, 0x00, 0x02, 0x37, 0x51, 0x10, 0x02, 0x55, 0x00, 0x32, 0x24, 0x8B, 0x04, 0x00, 0x25, 0x00, 0x02, 0x00, 0x4F, 0x84, 0x00, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PanFlute", data = new byte[] { 0x34, 0xC0, 0x75, 0x00, 0x12, 0x0A, 0x00, 0x15, 0x00, 0x03, 0x31, 0x54, 0x0C, 0x00, 0x15, 0x00, 0x32, 0x13, 0x90, 0x0D, 0x00, 0x45, 0x00, 0x01, 0x00, 0x4C, 0x84, 0x00, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BottleBlow", data = new byte[] { 0x3C, 0xC0, 0x75, 0x00, 0x12, 0x0A, 0x00, 0x15, 0x00, 0x03, 0x29, 0x59, 0x0D, 0x00, 0x35, 0x00, 0x32, 0x18, 0x8C, 0x8D, 0x00, 0x55, 0x00, 0x01, 0x00, 0x4C, 0x84, 0x00, 0x25, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Shakuhachi (Alisia Dragoon)", data = new byte[] { 0x2C, 0xC0, 0x34, 0x20, 0x0C, 0x06, 0x02, 0x22, 0x00, 0x72, 0x00, 0x0A, 0x09, 0x00, 0x77, 0x00, 0x54, 0x23, 0x0C, 0x06, 0x02, 0x22, 0x00, 0x32, 0x00, 0x0A, 0x89, 0x00, 0x26, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Whistle (Aladdin)", data = new byte[] { 0x17, 0xC0, 0x31, 0x00, 0x0E, 0x80, 0x00, 0x08, 0x00, 0x01, 0x00, 0x87, 0x02, 0x00, 0x78, 0x00, 0x31, 0x7F, 0x80, 0x00, 0x00, 0x48, 0x00, 0x12, 0x7F, 0xC0, 0x00, 0x00, 0x08, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Ocarina", data = new byte[] { 0x34, 0xC0, 0x75, 0x00, 0x12, 0x0A, 0x03, 0x15, 0x00, 0x03, 0x31, 0x54, 0x0C, 0x02, 0x68, 0x00, 0x32, 0x29, 0x90, 0x0D, 0x00, 0x45, 0x00, 0x01, 0x00, 0x4C, 0x84, 0x00, 0x16, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Square (Ported from DMX)", data = new byte[] { 0x04, 0xC0, 0x02, 0x24, 0x47, 0x81, 0x18, 0xFA, 0x00, 0x00, 0x00, 0x10, 0x80, 0x00, 0x37, 0x00, 0x32, 0x1D, 0x4E, 0x01, 0x18, 0xAA, 0x00, 0x30, 0x00, 0x14, 0x00, 0x00, 0xDA, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Saw", data = new byte[] { 0x3C, 0xC0, 0x71, 0x1C, 0x1F, 0x00, 0x00, 0x0F, 0x00, 0x72, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x00, 0x31, 0x1C, 0x1F, 0x00, 0x00, 0x0F, 0x00, 0x32, 0x00, 0x1F, 0x00, 0x00, 0x0F, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Calliope", data = new byte[] { 0x3C, 0xC0, 0x75, 0x00, 0x12, 0x8A, 0x00, 0x15, 0x00, 0x23, 0x29, 0x99, 0x0D, 0x00, 0xD5, 0x00, 0x32, 0x18, 0x8C, 0x0D, 0x00, 0x55, 0x00, 0x61, 0x00, 0x4C, 0x84, 0x00, 0x2B, 0x00, 0x05 } },
            new EPSMPatchInfo() { name = "Lead4Chif (Sonic)", data = new byte[] { 0x3A, 0xC0, 0x01, 0x14, 0x8E, 0x0E, 0x00, 0x5F, 0x00, 0x07, 0x2B, 0x8E, 0x0E, 0x08, 0x5F, 0x00, 0x01, 0x17, 0x8D, 0x0E, 0x00, 0xBF, 0x00, 0x01, 0x00, 0x53, 0x03, 0x08, 0xBF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Lead5Char (Nineko)", data = new byte[] { 0x38, 0xC0, 0x72, 0x1E, 0xD1, 0x01, 0x00, 0xFF, 0x00, 0x13, 0x1E, 0x52, 0x07, 0x00, 0xFF, 0x00, 0x71, 0x1E, 0x14, 0x01, 0x00, 0xFF, 0x00, 0x11, 0x00, 0x14, 0x01, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LeadVoice", data = new byte[] { 0x0C, 0xC0, 0x12, 0x1E, 0x89, 0x00, 0x01, 0x0A, 0x00, 0x71, 0x00, 0x12, 0x00, 0x00, 0x0A, 0x00, 0x72, 0x12, 0x4E, 0x8B, 0x1D, 0x8A, 0x00, 0x11, 0x0C, 0x13, 0x8F, 0x06, 0x2A, 0x00, 0x23 } },
            new EPSMPatchInfo() { name = "LEad7Fifts (Animatics)", data = new byte[] { 0x3C, 0xC0, 0x34, 0x18, 0x5B, 0x05, 0x03, 0x07, 0x00, 0x74, 0x00, 0x5B, 0x05, 0x03, 0x07, 0x00, 0x73, 0x0E, 0x58, 0x00, 0x03, 0x06, 0x00, 0x33, 0x0C, 0x58, 0x00, 0x03, 0x06, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Lead8Bass (TinyToon)", data = new byte[] { 0x30, 0xC0, 0x00, 0x1A, 0x1F, 0x06, 0x00, 0xF6, 0x00, 0x00, 0x1C, 0x1F, 0x1F, 0x00, 0x06, 0x00, 0x00, 0x16, 0x1F, 0x1F, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1F, 0x9F, 0x00, 0x06, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Pad1NewAge", data = new byte[] { 0x0C, 0xC0, 0x07, 0x19, 0x0C, 0x0B, 0x06, 0x75, 0x00, 0x08, 0x0E, 0x1F, 0x07, 0x00, 0xF4, 0x00, 0x31, 0x21, 0x84, 0x02, 0x00, 0x22, 0x00, 0x01, 0x00, 0x0C, 0x05, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Pad Warm (Ported from DMX)", data = new byte[] { 0x07, 0xC0, 0x00, 0x0F, 0xC5, 0x00, 0x00, 0x03, 0x00, 0x00, 0x0F, 0x05, 0x00, 0x00, 0x05, 0x00, 0x30, 0x0F, 0x45, 0x00, 0x00, 0x05, 0x00, 0x30, 0x0F, 0x05, 0x00, 0x00, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PolySynth", data = new byte[] { 0x3C, 0xC0, 0x31, 0x1A, 0x52, 0x08, 0x04, 0x16, 0x00, 0x52, 0x03, 0x50, 0x00, 0x00, 0x05, 0x00, 0x50, 0x16, 0x54, 0x08, 0x04, 0x15, 0x00, 0x30, 0x05, 0x52, 0x00, 0x00, 0x04, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PadChoir", data = new byte[] { 0x05, 0xC0, 0x00, 0x22, 0x4E, 0x80, 0x00, 0x52, 0x00, 0x00, 0x05, 0x4C, 0x80, 0x00, 0x04, 0x00, 0x00, 0x11, 0x8A, 0x00, 0x00, 0x53, 0x00, 0x00, 0x05, 0x89, 0x80, 0x00, 0x03, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Bowed", data = new byte[] { 0x1C, 0xC0, 0x06, 0x1A, 0xC9, 0x03, 0x01, 0x61, 0x00, 0x01, 0x06, 0x87, 0x06, 0x02, 0x72, 0x00, 0x05, 0x23, 0x08, 0x09, 0x00, 0xF3, 0x00, 0x02, 0x1D, 0x08, 0x06, 0x00, 0xF3, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Metallic", data = new byte[] { 0x3C, 0xC0, 0x31, 0x1C, 0xCB, 0x0B, 0x00, 0x01, 0x00, 0x09, 0x0E, 0x03, 0x03, 0x00, 0xA5, 0x00, 0x01, 0x16, 0x8B, 0x83, 0x00, 0x11, 0x00, 0x02, 0x0B, 0x03, 0x01, 0x00, 0xE5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PadHalo", data = new byte[] { 0x2C, 0xC0, 0x21, 0x0C, 0x41, 0x06, 0x00, 0x54, 0x00, 0x01, 0x03, 0x08, 0x87, 0x00, 0x35, 0x00, 0x71, 0x00, 0x42, 0x06, 0x01, 0x54, 0x00, 0x01, 0x16, 0x08, 0x87, 0x00, 0x35, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Sweep", data = new byte[] { 0x2C, 0xC0, 0x22, 0x16, 0x02, 0x06, 0x00, 0x54, 0x00, 0x01, 0x03, 0x16, 0x87, 0x00, 0x35, 0x00, 0x75, 0x18, 0x02, 0x0A, 0x05, 0x54, 0x00, 0x02, 0x13, 0x08, 0x87, 0x00, 0x35, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "FX Rain", data = new byte[] { 0x2C, 0xC0, 0x11, 0x1E, 0x16, 0x80, 0x00, 0x02, 0x00, 0x01, 0x00, 0x1F, 0x00, 0x02, 0x04, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03 } },
            new EPSMPatchInfo() { name = "FX-SndTrack (ThunderForce IV)", data = new byte[] { 0x2C, 0xC0, 0x33, 0x1E, 0x04, 0x06, 0x04, 0xF3, 0x00, 0x53, 0x00, 0x11, 0x03, 0x00, 0x23, 0x00, 0x52, 0x1E, 0x02, 0x06, 0x04, 0xF4, 0x00, 0x32, 0x00, 0x0A, 0x03, 0x00, 0x24, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "FXCrystal (Alisia Dragoon)", data = new byte[] { 0x3C, 0xC0, 0x45, 0x37, 0x1F, 0x0D, 0x04, 0x75, 0x00, 0x72, 0x02, 0x1F, 0x08, 0x07, 0x66, 0x00, 0x04, 0x2B, 0x1A, 0x13, 0x07, 0x25, 0x00, 0x32, 0x00, 0x18, 0x08, 0x07, 0x23, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "AtmoSphere (Alisia Dragoon)", data = new byte[] { 0x34, 0xC0, 0x72, 0x17, 0x96, 0x01, 0x00, 0x54, 0x00, 0x31, 0x05, 0x9F, 0x84, 0x00, 0x44, 0x00, 0x11, 0x31, 0x16, 0x04, 0x05, 0x05, 0x00, 0x51, 0x10, 0x0D, 0x09, 0x06, 0x56, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BrightNess", data = new byte[] { 0x03, 0xC0, 0x32, 0x28, 0x92, 0x81, 0x04, 0x51, 0x00, 0x53, 0x2B, 0x5F, 0x00, 0x00, 0x05, 0x00, 0x55, 0x27, 0x54, 0x08, 0x04, 0x14, 0x00, 0x32, 0x06, 0x5F, 0x00, 0x00, 0x04, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Goblins", data = new byte[] { 0x2C, 0xC0, 0x21, 0x12, 0x02, 0x06, 0x00, 0x52, 0x00, 0x01, 0x13, 0x42, 0x87, 0x00, 0x32, 0x00, 0x71, 0x00, 0x01, 0x81, 0x01, 0x02, 0x00, 0x01, 0x16, 0x02, 0x07, 0x00, 0x32, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Echos", data = new byte[] { 0x14, 0xC0, 0x32, 0x29, 0x4E, 0x80, 0x00, 0x53, 0x00, 0x02, 0x05, 0x4E, 0x80, 0x00, 0x04, 0x00, 0x01, 0x2D, 0x8A, 0x00, 0x00, 0x53, 0x00, 0x71, 0x05, 0x92, 0x80, 0x00, 0x03, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SciFi", data = new byte[] { 0x18, 0xC0, 0x31, 0x22, 0x94, 0x01, 0x00, 0x24, 0x00, 0x68, 0x24, 0x9F, 0x01, 0x00, 0x24, 0x00, 0x23, 0x22, 0x9F, 0x02, 0x00, 0x44, 0x00, 0x01, 0x04, 0x0F, 0x80, 0x00, 0x24, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Sitar", data = new byte[] { 0x04, 0xC0, 0x02, 0x2F, 0x5F, 0x07, 0x05, 0x44, 0x00, 0x07, 0x19, 0x93, 0x03, 0x00, 0xF5, 0x00, 0x02, 0x08, 0x92, 0x03, 0x00, 0xF3, 0x00, 0x07, 0x0E, 0x1F, 0x05, 0x00, 0xF5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Banjo", data = new byte[] { 0x32, 0xC0, 0x36, 0x19, 0x4F, 0x14, 0x08, 0x19, 0x00, 0x21, 0x45, 0x5F, 0x0F, 0x17, 0x18, 0x00, 0x52, 0x17, 0x5C, 0x09, 0x01, 0x10, 0x00, 0x32, 0x00, 0x13, 0x19, 0x09, 0x17, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Shamisen", data = new byte[] { 0x38, 0xC0, 0x05, 0x1B, 0x9F, 0x0E, 0x00, 0xF8, 0x00, 0x02, 0x22, 0x9F, 0x0E, 0x00, 0xE2, 0x00, 0x01, 0x18, 0x5F, 0x05, 0x00, 0xE4, 0x00, 0x06, 0x00, 0x5F, 0x07, 0x00, 0xF5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Koto", data = new byte[] { 0x24, 0xC0, 0x53, 0x17, 0x9B, 0x08, 0x04, 0x33, 0x00, 0x01, 0x00, 0x58, 0x16, 0x04, 0x22, 0x00, 0x13, 0x1C, 0x9B, 0x88, 0x08, 0x32, 0x00, 0x03, 0x0C, 0x18, 0x16, 0x08, 0x14, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Kalimba", data = new byte[] { 0x36, 0xC0, 0x74, 0x17, 0x54, 0x95, 0x15, 0x77, 0x00, 0x71, 0x00, 0x14, 0x80, 0x0A, 0x05, 0x00, 0x64, 0x15, 0x5D, 0x0D, 0x07, 0x55, 0x00, 0x74, 0x13, 0x14, 0x0C, 0x09, 0x45, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BagPipe", data = new byte[] { 0x18, 0xC0, 0x01, 0x0B, 0x8E, 0x10, 0x00, 0x36, 0x00, 0x04, 0x27, 0x09, 0x00, 0x00, 0x0D, 0x00, 0x00, 0x1C, 0x0E, 0x00, 0x00, 0x35, 0x00, 0x02, 0x08, 0x8C, 0x00, 0x00, 0x0D, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Fiddle", data = new byte[] { 0x3A, 0xC0, 0x31, 0x1D, 0x0E, 0x04, 0x00, 0x15, 0x00, 0x37, 0x1F, 0x0C, 0x10, 0x00, 0x04, 0x00, 0x70, 0x37, 0x08, 0x09, 0x03, 0x07, 0x00, 0x02, 0x03, 0x8A, 0x0A, 0x00, 0x15, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Shanai (Aladdin)", data = new byte[] { 0x38, 0xC0, 0x01, 0x27, 0x18, 0x97, 0x00, 0x0A, 0x00, 0x01, 0x1E, 0x10, 0x9F, 0x00, 0x0A, 0x00, 0x01, 0x28, 0x16, 0x1F, 0x00, 0x0A, 0x00, 0x04, 0x00, 0x18, 0x1F, 0x00, 0x0A, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "TinkleBell", data = new byte[] { 0x07, 0xC0, 0x33, 0x19, 0xD4, 0x04, 0x04, 0x03, 0x00, 0x72, 0x10, 0xD6, 0x03, 0x08, 0x53, 0x00, 0x32, 0x11, 0x14, 0x05, 0x06, 0x03, 0x00, 0x73, 0x00, 0x96, 0x07, 0x07, 0xB3, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Agogo", data = new byte[] { 0x3C, 0xC0, 0x03, 0x0D, 0x9F, 0x10, 0x10, 0x86, 0x00, 0x0C, 0x00, 0x1F, 0x0C, 0x0C, 0xA6, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SteelDrums", data = new byte[] { 0x0C, 0xC0, 0x1C, 0x41, 0x0C, 0x12, 0x00, 0x56, 0x00, 0x71, 0x00, 0x1A, 0x09, 0x00, 0xF5, 0x00, 0x35, 0x22, 0x0C, 0x0E, 0x07, 0x86, 0x00, 0x71, 0x00, 0x1A, 0x0B, 0x00, 0xF5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "WoodBlock", data = new byte[] { 0x3C, 0xC0, 0x17, 0x14, 0x1F, 0x16, 0x16, 0xC8, 0x00, 0x15, 0x00, 0x1F, 0x12, 0x1C, 0xB8, 0x00, 0x1E, 0x0A, 0xDF, 0x19, 0x0C, 0xE8, 0x00, 0x19, 0x05, 0xDF, 0x14, 0x0D, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Taiko Drum", data = new byte[] { 0x1E, 0xC0, 0x00, 0x06, 0x9F, 0x12, 0x12, 0x07, 0x00, 0x01, 0x04, 0x9F, 0x10, 0x10, 0x0B, 0x00, 0x00, 0x0C, 0x1F, 0x10, 0x10, 0x03, 0x00, 0x00, 0x03, 0x1F, 0x08, 0x0C, 0x93, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Melodic Tom", data = new byte[] { 0x31, 0xC0, 0x02, 0x10, 0x1F, 0x00, 0x0D, 0x00, 0x00, 0x00, 0x02, 0x1F, 0x02, 0x12, 0x00, 0x00, 0x00, 0x23, 0x1E, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x0E, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SynDrum (Alisia Dragoon)", data = new byte[] { 0x3B, 0xC0, 0x01, 0x06, 0x1D, 0x12, 0x00, 0x56, 0x00, 0x01, 0x08, 0x1F, 0x1A, 0x16, 0x26, 0x00, 0x02, 0x0D, 0x5F, 0x1B, 0x08, 0x56, 0x00, 0x01, 0x00, 0x1F, 0x0E, 0x11, 0xC6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Reverse Cymbell", data = new byte[] { 0x3C, 0xC0, 0x7F, 0x00, 0x1D, 0x01, 0x00, 0x80, 0x00, 0x13, 0x09, 0x42, 0x8D, 0x16, 0x09, 0x00, 0x7F, 0x00, 0x1F, 0x00, 0x00, 0x14, 0x00, 0x00, 0x1D, 0x83, 0x1B, 0x06, 0xA6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Guitar Fret Noise", data = new byte[] { 0x3C, 0xC0, 0x76, 0x0E, 0x1A, 0x01, 0x00, 0x80, 0x00, 0x13, 0x11, 0x4C, 0x87, 0x0E, 0x09, 0x00, 0x73, 0x21, 0x1F, 0x00, 0x00, 0x14, 0x00, 0x04, 0x20, 0x8A, 0x0E, 0x09, 0xA6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Breath Noise", data = new byte[] { 0x2C, 0xC0, 0x34, 0x20, 0x0C, 0x06, 0x02, 0x22, 0x00, 0x72, 0x00, 0x0A, 0x0C, 0x07, 0xB7, 0x00, 0x54, 0x23, 0x0C, 0x06, 0x02, 0x22, 0x00, 0x32, 0x00, 0x0A, 0x89, 0x09, 0x76, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "SeaShore", data = new byte[] { 0x3D, 0xC0, 0x33, 0x04, 0x1F, 0x00, 0x00, 0xF0, 0x00, 0x01, 0x17, 0x02, 0x04, 0x00, 0xF4, 0x00, 0x01, 0x16, 0x02, 0x04, 0x00, 0xF4, 0x00, 0x01, 0x15, 0x02, 0x04, 0x00, 0xF4, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BirdTweet", data = new byte[] { 0x1F, 0xC0, 0x07, 0x19, 0xC6, 0x10, 0x0E, 0x07, 0x00, 0x08, 0x10, 0xC8, 0x0E, 0x10, 0x56, 0x00, 0x15, 0x11, 0x0F, 0x0D, 0x0E, 0x0A, 0x00, 0x06, 0x00, 0x8B, 0x0E, 0x10, 0xB6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Telephone", data = new byte[] { 0x24, 0xC0, 0x00, 0x00, 0x1A, 0x97, 0x00, 0x81, 0x00, 0x0A, 0x00, 0xCE, 0x8B, 0x00, 0x24, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Helicopter", data = new byte[] { 0x34, 0xC0, 0x30, 0x00, 0x42, 0x01, 0x00, 0x00, 0x00, 0x02, 0x14, 0x02, 0x82, 0x00, 0x15, 0x00, 0x00, 0x7F, 0x04, 0x8D, 0x00, 0x09, 0x00, 0x00, 0x7F, 0x03, 0x8F, 0x00, 0x04, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Applause", data = new byte[] { 0x3D, 0xC0, 0x33, 0x04, 0x1F, 0x00, 0x00, 0xF0, 0x00, 0x01, 0x17, 0x06, 0x07, 0x00, 0x08, 0x00, 0x01, 0x16, 0x06, 0x0D, 0x00, 0x09, 0x00, 0x01, 0x15, 0x06, 0x0F, 0x00, 0x04, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Gunshot", data = new byte[] { 0x3D, 0xC0, 0x33, 0x04, 0x1F, 0x03, 0x11, 0xF5, 0x00, 0x01, 0x00, 0x1F, 0x0F, 0x1F, 0xF8, 0x00, 0x01, 0x00, 0x1F, 0x14, 0x14, 0xF8, 0x00, 0x01, 0x00, 0x1F, 0x0F, 0x10, 0xFB, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Sticks", data = new byte[] { 0x18, 0xC0, 0x02, 0x0A, 0x1F, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x2A, 0x9F, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x17, 0x1F, 0x10, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x13, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Square Click", data = new byte[] { 0x1F, 0xC0, 0x01, 0x27, 0x1F, 0x14, 0x00, 0xFF, 0x00, 0x01, 0x27, 0x9F, 0x14, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x15, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x12, 0x15, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MetronomeClick", data = new byte[] { 0x18, 0xC0, 0x02, 0x06, 0x1F, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x21, 0x9F, 0x16, 0x00, 0xFF, 0x00, 0x01, 0x05, 0x1F, 0x13, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x15, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Metronome Bell", data = new byte[] { 0x18, 0xC0, 0x02, 0x06, 0x18, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x21, 0x9F, 0x16, 0x00, 0xFF, 0x00, 0x01, 0x05, 0x1F, 0x18, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x0C, 0x00, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BassDrum ", data = new byte[] { 0x22, 0xC0, 0x00, 0x00, 0x1B, 0x00, 0x11, 0x07, 0x00, 0x06, 0x7F, 0x00, 0x0D, 0x0C, 0xF6, 0x00, 0x05, 0x7F, 0x00, 0x07, 0x0F, 0xF4, 0x00, 0x01, 0x00, 0x5F, 0x00, 0x0B, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BassDrum ", data = new byte[] { 0x1A, 0xC0, 0x00, 0x00, 0x1B, 0x00, 0x11, 0x07, 0x00, 0x06, 0x7F, 0x00, 0x0D, 0x0C, 0xF6, 0x00, 0x05, 0x7F, 0x00, 0x07, 0x0F, 0xF4, 0x00, 0x01, 0x00, 0x5F, 0x00, 0x0B, 0x05, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "StickSide", data = new byte[] { 0x18, 0xC0, 0x02, 0x15, 0x1F, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x21, 0x9F, 0x12, 0x00, 0xFF, 0x00, 0x01, 0x0E, 0x1F, 0x11, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x12, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "AcusticSnare (Action52)", data = new byte[] { 0x35, 0xC0, 0x33, 0x04, 0xDF, 0x05, 0x0E, 0xF2, 0x00, 0x01, 0x00, 0x9F, 0x0E, 0x1F, 0xF7, 0x00, 0x01, 0x00, 0xDF, 0x12, 0x0B, 0xF6, 0x00, 0x01, 0x00, 0x9F, 0x0D, 0x0A, 0x75, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "HandClap (Action54)", data = new byte[] { 0x3C, 0xC0, 0x0F, 0x0D, 0x9F, 0x00, 0x00, 0x05, 0x00, 0x0F, 0x17, 0x1F, 0x10, 0x10, 0x29, 0x00, 0x00, 0x03, 0x1F, 0x15, 0x0F, 0x0A, 0x00, 0x01, 0x00, 0x1F, 0x02, 0x11, 0x07, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "AcusticSnare (Action52)", data = new byte[] { 0x35, 0xC0, 0x33, 0x04, 0xDF, 0x05, 0x0E, 0xF2, 0x00, 0x01, 0x00, 0x9F, 0x0F, 0x1F, 0xF7, 0x00, 0x01, 0x00, 0xDF, 0x12, 0x0B, 0xF7, 0x00, 0x01, 0x00, 0x9F, 0x0E, 0x0A, 0x75, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Low Floor Tom", data = new byte[] { 0x3D, 0xC0, 0x31, 0x16, 0x1E, 0x1A, 0x03, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x13, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ClosedHihat", data = new byte[] { 0x24, 0xC0, 0x38, 0x01, 0x5F, 0x0F, 0x1C, 0xB4, 0x00, 0x77, 0x00, 0xDF, 0x8D, 0x10, 0xB8, 0x00, 0x1C, 0x00, 0xDC, 0x8E, 0x00, 0xF4, 0x00, 0x70, 0x00, 0xDF, 0x0E, 0x10, 0xD8, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "High Floor Tom", data = new byte[] { 0x3D, 0xC0, 0x31, 0x16, 0x1E, 0x1A, 0x03, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x0E, 0xF6, 0x00, 0x14, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x09, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "PedalHihat", data = new byte[] { 0x38, 0xC0, 0x3C, 0x00, 0x47, 0x0A, 0x1C, 0xB4, 0x00, 0x7A, 0x00, 0xC3, 0x8A, 0x10, 0xB7, 0x00, 0x13, 0x00, 0xDF, 0x00, 0x00, 0x04, 0x00, 0x75, 0x07, 0xC4, 0x0D, 0x1D, 0x59, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Low Tom", data = new byte[] { 0x3D, 0xC0, 0x31, 0x16, 0x1E, 0x1A, 0x03, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x14, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OpenHiHat", data = new byte[] { 0x2C, 0xC0, 0x09, 0x00, 0x1F, 0x0C, 0x00, 0x10, 0x00, 0x02, 0x04, 0x1F, 0x14, 0x08, 0x44, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Low-med Tom", data = new byte[] { 0x3D, 0xC0, 0x30, 0x16, 0x1E, 0x1A, 0x03, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x14, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "High-med Tom", data = new byte[] { 0x3D, 0xC0, 0x30, 0x16, 0x1E, 0x18, 0x13, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x14, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Crash (Animatics)", data = new byte[] { 0x3C, 0xC0, 0x7F, 0x00, 0x1F, 0x07, 0x00, 0x40, 0x00, 0x13, 0x00, 0x1F, 0x88, 0x00, 0xF4, 0x00, 0x71, 0x00, 0x1F, 0x14, 0x06, 0x33, 0x00, 0x07, 0x00, 0x9F, 0x19, 0x06, 0xA4, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "High Tom ", data = new byte[] { 0x3D, 0xC0, 0x31, 0x16, 0x1E, 0x1A, 0x03, 0xF6, 0x00, 0x70, 0x00, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x14, 0x03, 0x5E, 0x0C, 0x01, 0xF6, 0x00, 0x10, 0x03, 0x1E, 0x11, 0x03, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "RideCymbell1", data = new byte[] { 0x2C, 0xC0, 0x0C, 0x00, 0x1F, 0x0C, 0x00, 0x10, 0x00, 0x03, 0x00, 0x18, 0x14, 0x08, 0x43, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Chinese Crash (Animatics)", data = new byte[] { 0x2C, 0xC0, 0x7F, 0x00, 0x1F, 0x05, 0x00, 0x52, 0x00, 0x13, 0x00, 0x1F, 0x0A, 0x04, 0x84, 0x00, 0x71, 0x00, 0x1F, 0x14, 0x06, 0x33, 0x00, 0x07, 0x00, 0x9F, 0x19, 0x06, 0xA3, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Ride Bell", data = new byte[] { 0x1C, 0xC0, 0x0D, 0x00, 0x1F, 0x07, 0x00, 0xE1, 0x00, 0x0D, 0x10, 0x1F, 0x08, 0x0A, 0xE4, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Tamborine", data = new byte[] { 0x39, 0xC0, 0x22, 0x06, 0x5F, 0x05, 0x02, 0x81, 0x00, 0x04, 0x01, 0x9F, 0x05, 0x02, 0x53, 0x00, 0x75, 0x00, 0x96, 0x0F, 0x0C, 0xA1, 0x00, 0x3E, 0x08, 0x92, 0x0D, 0x0D, 0xA6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Splash Crash (Animatics)", data = new byte[] { 0x2C, 0xC0, 0x7F, 0x00, 0x1F, 0x05, 0x06, 0x50, 0x00, 0x13, 0x00, 0x1F, 0x0A, 0x04, 0x84, 0x00, 0x71, 0x00, 0x1F, 0x14, 0x06, 0x33, 0x00, 0x07, 0x00, 0x9F, 0x19, 0x06, 0xA4, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "CowBell", data = new byte[] { 0x04, 0xC0, 0x02, 0x10, 0x1F, 0x11, 0x11, 0xD8, 0x00, 0x07, 0x00, 0x1F, 0x10, 0x10, 0x75, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Crash 2 (Animatics)", data = new byte[] { 0x2C, 0xC0, 0x7F, 0x00, 0x1F, 0x00, 0x00, 0x50, 0x00, 0x13, 0x00, 0x1F, 0x0A, 0x04, 0x84, 0x00, 0x71, 0x00, 0x1F, 0x14, 0x06, 0x33, 0x00, 0x07, 0x00, 0x9F, 0x19, 0x06, 0xA4, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "VibeSlap", data = new byte[] { 0x34, 0xC0, 0x00, 0x08, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x0A, 0x00, 0xF5, 0x00, 0x00, 0x00, 0x1F, 0x05, 0x00, 0x00, 0x00, 0x00, 0x15, 0x1F, 0x0A, 0x00, 0xF5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "RideCymbell2", data = new byte[] { 0x2C, 0xC0, 0x0C, 0x00, 0x1F, 0x0C, 0x00, 0x10, 0x00, 0x03, 0x00, 0x18, 0x14, 0x08, 0x43, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "HiBo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x9C, 0x14, 0x00, 0xFF, 0x00, 0x72, 0x00, 0x17, 0x12, 0x0A, 0xFF, 0x00, 0x33, 0x00, 0x12, 0x12, 0x0A, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LoBo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x9C, 0x14, 0x00, 0xFF, 0x00, 0x72, 0x00, 0x17, 0x12, 0x0A, 0xFF, 0x00, 0x33, 0x00, 0x12, 0x12, 0x0A, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MuHiCo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x9C, 0x14, 0x00, 0xFF, 0x00, 0x71, 0x00, 0x17, 0x12, 0x0A, 0xFF, 0x00, 0x31, 0x00, 0x12, 0x12, 0x0A, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OpHiCo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x9C, 0x14, 0x00, 0xFF, 0x00, 0x71, 0x00, 0x17, 0x12, 0x0A, 0xFF, 0x00, 0x31, 0x00, 0x12, 0x0D, 0x0A, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LowCo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x9C, 0x14, 0x00, 0xFF, 0x00, 0x71, 0x00, 0x17, 0x12, 0x0A, 0xFF, 0x00, 0x31, 0x00, 0x12, 0x0D, 0x0A, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "HighTimbale", data = new byte[] { 0x3D, 0xC0, 0x01, 0x07, 0x1C, 0x12, 0x00, 0xF9, 0x00, 0x00, 0x00, 0x1C, 0x0F, 0x0F, 0xF6, 0x00, 0x70, 0x00, 0x17, 0x0B, 0x0C, 0xF6, 0x00, 0x30, 0x00, 0x12, 0x0C, 0x0C, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LowTimbale", data = new byte[] { 0x3D, 0xC0, 0x01, 0x07, 0x1C, 0x12, 0x00, 0xF9, 0x00, 0x00, 0x00, 0x1C, 0x0F, 0x16, 0x5C, 0x00, 0x70, 0x00, 0x17, 0x0B, 0x1A, 0x5C, 0x00, 0x30, 0x00, 0x12, 0x0C, 0x16, 0x5C, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "HiAgogo", data = new byte[] { 0x3C, 0xC0, 0x03, 0x0D, 0x9F, 0x10, 0x10, 0x86, 0x00, 0x0C, 0x00, 0x1F, 0x0C, 0x0C, 0xA6, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LoAgogo", data = new byte[] { 0x3C, 0xC0, 0x03, 0x0D, 0x9F, 0x10, 0x10, 0x86, 0x00, 0x0C, 0x00, 0x1F, 0x0C, 0x0C, 0xA6, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Cabasa", data = new byte[] { 0x31, 0xC0, 0x2F, 0x06, 0x5F, 0x05, 0x02, 0x81, 0x00, 0x0F, 0x01, 0x9F, 0x05, 0x02, 0x53, 0x00, 0x7D, 0x02, 0x99, 0x05, 0x02, 0x71, 0x00, 0x33, 0x00, 0x8D, 0x11, 0x0B, 0xA9, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Maracas", data = new byte[] { 0x3C, 0xC0, 0x0F, 0x00, 0x58, 0x0E, 0x18, 0x49, 0x00, 0x02, 0x00, 0x8E, 0x16, 0x19, 0x8D, 0x00, 0x0F, 0x00, 0xD8, 0x10, 0x12, 0x49, 0x00, 0x0F, 0x1F, 0x12, 0x12, 0x12, 0x69, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "ShortWhistle", data = new byte[] { 0x04, 0xC0, 0x00, 0x25, 0x12, 0x0A, 0x00, 0x0B, 0x00, 0x0E, 0x00, 0x12, 0x0B, 0x16, 0x2B, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "LongWhistle", data = new byte[] { 0x04, 0xC0, 0x00, 0x25, 0x12, 0x0A, 0x00, 0x0B, 0x00, 0x0E, 0x00, 0x12, 0x08, 0x16, 0x2B, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Short Guiro", data = new byte[] { 0x3C, 0xC0, 0x00, 0x00, 0x1F, 0x0B, 0x0A, 0x06, 0x00, 0x00, 0x02, 0x0C, 0x0E, 0x10, 0x18, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Long Guiro", data = new byte[] { 0x3C, 0xC0, 0x00, 0x00, 0x1F, 0x09, 0x09, 0x06, 0x00, 0x00, 0x07, 0x09, 0x0E, 0x10, 0x18, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "WoodBlock", data = new byte[] { 0x3C, 0xC0, 0x17, 0x14, 0x1F, 0x16, 0x16, 0xC8, 0x00, 0x15, 0x00, 0x1F, 0x12, 0x1C, 0xB8, 0x00, 0x1E, 0x0A, 0xDF, 0x19, 0x0C, 0xE8, 0x00, 0x19, 0x05, 0xDF, 0x14, 0x0D, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "WoodBlock", data = new byte[] { 0x3C, 0xC0, 0x17, 0x14, 0x1F, 0x16, 0x16, 0xC8, 0x00, 0x15, 0x00, 0x1F, 0x12, 0x1C, 0xB8, 0x00, 0x1E, 0x0A, 0xDF, 0x19, 0x0C, 0xE8, 0x00, 0x19, 0x06, 0xDF, 0x14, 0x0D, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "WoodBlock", data = new byte[] { 0x3C, 0xC0, 0x17, 0x14, 0x1F, 0x16, 0x16, 0xC8, 0x00, 0x15, 0x00, 0x1F, 0x12, 0x1C, 0xB8, 0x00, 0x1E, 0x0A, 0xDF, 0x19, 0x0C, 0xE8, 0x00, 0x19, 0x06, 0xDF, 0x14, 0x0D, 0x18, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MuteCuika", data = new byte[] { 0x04, 0xC0, 0x01, 0x27, 0x0C, 0x0F, 0x0F, 0x07, 0x00, 0x02, 0x00, 0x0E, 0x0E, 0x0F, 0x08, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OpenCuika", data = new byte[] { 0x04, 0xC0, 0x01, 0x27, 0x0C, 0x0F, 0x0F, 0x07, 0x00, 0x02, 0x00, 0x0B, 0x0E, 0x0F, 0x06, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MuteTriangle", data = new byte[] { 0x24, 0xC0, 0x03, 0x1A, 0x1F, 0x00, 0x00, 0x80, 0x00, 0x02, 0x00, 0x1F, 0x0E, 0x0D, 0x8B, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OpenTriangle", data = new byte[] { 0x24, 0xC0, 0x03, 0x1A, 0x1F, 0x00, 0x00, 0x80, 0x00, 0x02, 0x00, 0x1F, 0x08, 0x08, 0x85, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Shaker", data = new byte[] { 0x3C, 0xC0, 0x0F, 0x00, 0x58, 0x0E, 0x18, 0x49, 0x00, 0x02, 0x0E, 0x8C, 0x16, 0x19, 0x8D, 0x00, 0x0F, 0x00, 0xD8, 0x10, 0x12, 0x49, 0x00, 0x0F, 0x12, 0x12, 0x12, 0x12, 0x69, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "JingleBells", data = new byte[] { 0x3C, 0xC0, 0x05, 0x18, 0x1F, 0x05, 0x0F, 0xF4, 0x00, 0x04, 0x09, 0x4E, 0x0A, 0x07, 0xA6, 0x00, 0x05, 0x1C, 0x1F, 0x08, 0x10, 0xF0, 0x00, 0x04, 0x0E, 0x4E, 0x09, 0x07, 0xA5, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "BellTree", data = new byte[] { 0x2C, 0xC0, 0x05, 0x09, 0x14, 0x0D, 0x00, 0x10, 0x00, 0x09, 0x00, 0x14, 0x15, 0x08, 0x44, 0x00, 0x05, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "Castanets", data = new byte[] { 0x18, 0xC0, 0x02, 0x06, 0x1F, 0x12, 0x00, 0xFF, 0x00, 0x02, 0x21, 0x9F, 0x16, 0x00, 0xFF, 0x00, 0x01, 0x05, 0x1F, 0x13, 0x00, 0xFF, 0x00, 0x01, 0x00, 0x1F, 0x16, 0x00, 0xFF, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "MuteSurdo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xD3, 0x14, 0x00, 0xFF, 0x00, 0x71, 0x00, 0x0E, 0x12, 0x0A, 0xFF, 0x00, 0x31, 0x00, 0x0E, 0x0D, 0x0A, 0xF6, 0x00, 0x00 } },
            new EPSMPatchInfo() { name = "OpenSurdo", data = new byte[] { 0x36, 0xC0, 0x01, 0x05, 0x9C, 0x0F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0xD3, 0x14, 0x00, 0xFF, 0x00, 0x71, 0x00, 0x0E, 0x12, 0x0A, 0xFF, 0x00, 0x31, 0x00, 0x0E, 0x0B, 0x08, 0xF4, 0x00, 0x00} }*/

        };
    }

    public static class FdsMasterVolumeType
    {
        public const int Volume100 = 0;
        public const int Volume66  = 1;
        public const int Volume50  = 2;
        public const int Volume40  = 3;

        public static readonly string[] Names =
        {
            "100%",
            "66%",
            "50%",
            "40%",
        };

        public static int GetValueForName(string str)
        {
            return Array.IndexOf(Names, str);
        }
    }

    public static class Vrc6SawMasterVolumeType
    {
        public const int Full = 0;
        public const int Half = 1;
        public const int Quarter = 2;

        public static readonly string[] Names =
        {
            "Full",
            "Half",
            "Quarter"
        };

        public static int GetValueForName(string str)
        {
            return Array.IndexOf(Names, str);
        }
    }
}
